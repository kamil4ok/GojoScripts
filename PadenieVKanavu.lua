local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=0;local v82;while true do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v99=v5(v82,v19);v19=nil;return v99;else return v82;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v83=0 -0 ;local v84;while true do if (v83==(0 -0)) then v84=(v31/((3 -1)^(v32-((879 -(282 + 595)) -1))))%(2^(((v33-(620 -(555 + 64))) -(v32-(932 -((2494 -(1523 + 114)) + 74)))) + (569 -(367 + 201)))) ;return v84-(v84%1) ;end end else local v85=(929 -(193 + 21 + 713))^(v32-(1 + 0)) ;return (((v31%(v85 + v85))>=v85) and 1) or (0 + (0 -0)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1067 -(68 + 997)) );v18=v18 + (1272 -(226 + 1044)) ;return (v36 * (1114 -858)) + v35 ;end local function v23() local v37=117 -(32 + 85) ;local v38;local v39;local v40;local v41;while true do if (0==v37) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 + (350 -(87 + 263)) );v18=v18 + 1 + 3 ;v37=958 -(892 + 65) ;end if (v37==(2 -1)) then return (v41 * (31011612 -(14234576 -(67 + 113)))) + (v40 * 65536) + (v39 * (469 -213)) + v38 ;end end end local function v24() local v42=v23();local v43=v23();local v44=1 + 0 ;local v45=(v20(v43,1,(49 + 0) -29 ) * ((2 + 0)^(127 -(886 -(368 + 423))))) + v42 ;local v46=v20(v43,21,983 -(802 + 150) );local v47=((v20(v43,85 -53 )==(1 -0)) and  -1) or (1 + (0 -0)) ;if (v46==0) then if (v45==(997 -(915 + 82))) then return v47 * (0 -0) ;else v46=1 + 0 ;v44=0 -0 ;end elseif (v46==(3234 -(1069 + 118))) then return ((v45==0) and (v47 * ((2 -1)/(0 -(18 -(10 + 8)))))) or (v47 * NaN) ;end return v8(v47,v46-(178 + 845) ) * (v44 + (v45/((3 -1)^52))) ;end local function v25(v48) local v49=0 -0 ;local v50;local v51;while true do if (v49==(1 + 1)) then v51={};for v88=1, #v50 do v51[v88]=v2(v1(v3(v50,v88,v88)));end v49=445 -(416 + 26) ;end if (3==v49) then return v6(v51);end if (v49==(3 -2)) then v50=v3(v16,v18,(v18 + v48) -(1 + 0) );v18=v18 + v48 ;v49=3 -1 ;end if (v49==0) then v50=nil;if  not v48 then local v96=438 -(145 + 293) ;while true do if (v96==(430 -(44 + 386))) then v48=v23();if (v48==(1486 -(998 + 488))) then return "";end break;end end end v49=1 + 0 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=0 -0 ;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (1~=v52) then else v55=nil;v56=nil;v52=2;end if ((123 -(30 + 90))~=v52) then else v59=nil;while true do local v90=0 + 0 ;local v91;while true do if (v90~=(0 + 0)) then else v91=0 + 0 ;while true do if (v91~=1) then else if (v53==1) then local v100=0;while true do if (v100==(0 + 0)) then v57={v54,v55,nil,v56};v58=v23();v100=2 -1 ;end if (v100==1) then v59={};v53=2 + 0 ;break;end end end if (2~=v53) then else local v101=0;while true do if (v101==0) then local v105=0 + 0 ;while true do if (v105==(396 -(115 + 281))) then for v120=2 -1 ,v58 do local v121=0;local v122;local v123;while true do if (v121~=(0 + 0)) then else local v385=0 -0 ;while true do if (v385==(0 -0)) then v122=v21();v123=nil;v385=868 -(550 + 317) ;end if (v385==1) then v121=1 -0 ;break;end end end if (v121~=(1 -0)) then else if (v122==(2 -1)) then v123=v21()~=(285 -(134 + 151)) ;elseif (v122==(1667 -(970 + 695))) then v123=v24();elseif (v122==3) then v123=v25();end v59[v120]=v123;break;end end end v57[3]=v21();v105=1;end if (v105==1) then v101=1 -0 ;break;end end end if (v101~=(1991 -(582 + 1408))) then else for v107=1,v23() do local v108=0 -0 ;local v109;local v110;while true do if (v108==(0 -0)) then v109=0 -0 ;v110=nil;v108=1;end if ((1825 -(1195 + 629))==v108) then while true do if (v109==(0 -0)) then v110=v21();if (v20(v110,1,242 -(187 + 54) )==(780 -(162 + 618))) then local v481=0 + 0 ;local v482;local v483;local v484;local v485;while true do if (2~=v481) then else while true do if (v482==1) then local v530=0 + 0 ;local v531;while true do if (v530~=0) then else v531=0 -0 ;while true do if ((0 -0)~=v531) then else local v546=0;while true do if (v546==1) then v531=1;break;end if (v546==0) then v485={v22(),v22(),nil,nil};if (v483==(0 + 0)) then local v547=0 -0 ;while true do if (v547==(0 -0)) then v485[1387 -(746 + 638) ]=v22();v485[4]=v22();break;end end elseif (v483==(1 + 0)) then v485[3]=v23();elseif (v483==(2 -0)) then v485[344 -(218 + 123) ]=v23() -((1583 -(1535 + 46))^(16 + 0)) ;elseif (v483==3) then local v552=0 + 0 ;local v553;local v554;while true do if (v552==0) then v553=0;v554=nil;v552=561 -(306 + 254) ;end if (v552==(1 + 0)) then while true do if (v553==0) then v554=0;while true do if (v554==0) then v485[5 -2 ]=v23() -((1469 -(899 + 568))^(11 + 5)) ;v485[4]=v22();break;end end break;end end break;end end end v546=1;end end end if (v531~=1) then else v482=2;break;end end break;end end end if (v482==(4 -2)) then local v532=0;while true do if (v532==0) then if (v20(v484,604 -(268 + 335) ,291 -(60 + 230) )~=1) then else v485[574 -(426 + 146) ]=v59[v485[2]];end if (v20(v484,1 + 1 ,1458 -(282 + 1174) )~=(812 -(569 + 242))) then else v485[8 -5 ]=v59[v485[3]];end v532=1;end if (v532==(1 + 0)) then v482=3;break;end end end if (v482==(1024 -(706 + 318))) then v483=v20(v110,1253 -(721 + 530) ,1274 -(945 + 326) );v484=v20(v110,4,14 -8 );v482=1 + 0 ;end if (v482==(703 -(271 + 429))) then if (v20(v484,3,3)~=1) then else v485[4]=v59[v485[4 + 0 ]];end v54[v107]=v485;break;end end break;end if (v481==0) then v482=1500 -(1408 + 92) ;v483=nil;v481=1087 -(461 + 625) ;end if (v481==1) then v484=nil;v485=nil;v481=1290 -(993 + 295) ;end end end break;end end break;end end end v53=1 + 2 ;break;end end end break;end if (0==v91) then if (v53==(1171 -(418 + 753))) then local v102=0 + 0 ;local v103;while true do if (v102==(0 + 0)) then v103=0 + 0 ;while true do if (v103==0) then v54={};v55={};v103=1 + 0 ;end if ((530 -(406 + 123))==v103) then v56={};v53=1770 -(1749 + 20) ;break;end end break;end end end if (v53~=3) then else local v104=0 + 0 ;while true do if (v104~=0) then else local v106=1322 -(1249 + 73) ;while true do if (v106==0) then for v124=1,v23() do v55[v124-1 ]=v28();end return v57;end end end end end v91=1 + 0 ;end end break;end end end break;end if (v52==0) then v53=0;v54=nil;v52=1;end if (v52==2) then v57=nil;v58=nil;v52=3;end end end local function v29(v60,v61,v62) local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...) local v66=v63;local v67=v64;local v68=v65;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v86=0,v74 do if (v86>=v68) then v72[v86-v68 ]=v73[v86 + 1 ];else v76[v86]=v73[v86 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do local v87=0;while true do if (v87==1) then if (v79<=59) then if (v79<=29) then if (v79<=14) then if (v79<=6) then if (v79<=2) then if (v79<=0) then if (v78[2]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==1) then v76[v78[2]]=v29(v67[v78[3]],nil,v62);else local v128=0;local v129;while true do if (v128==0) then v129=v78[2];v76[v129](v13(v76,v129 + 1 ,v71));break;end end end elseif (v79<=4) then if (v79>3) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v76[v78[2]]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==5) then v76[v78[2]]=v76[v78[3]] -v78[4] ;else v76[v78[2]]=v61[v78[3]];end elseif (v79<=10) then if (v79<=8) then if (v79==7) then v76[v78[2]]=v76[v78[3]] -v76[v78[4]] ;else v76[v78[2]]=v76[v78[3]][v76[v78[4]]];end elseif (v79>9) then v76[v78[2]]=v76[v78[3]][v76[v78[4]]];else local v138=0;local v139;while true do if (v138==0) then v139=v78[2];v76[v139]=v76[v139](v13(v76,v139 + 1 ,v78[3]));break;end end end elseif (v79<=12) then if (v79>11) then v76[v78[2]]={};elseif (v76[v78[2]]~=v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79>13) then local v141=0;local v142;while true do if (v141==0) then v142=v78[2];v76[v142]=v76[v142]();break;end end elseif (v76[v78[2]]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=21) then if (v79<=17) then if (v79<=15) then v76[v78[2]][v78[3]]=v76[v78[4]];elseif (v79==16) then v76[v78[2]]=v76[v78[3]] + v78[4] ;else local v144=0;local v145;while true do if (v144==0) then v145=v76[v78[4]];if  not v145 then v70=v70 + 1 ;else v76[v78[2]]=v145;v70=v78[3];end break;end end end elseif (v79<=19) then if (v79==18) then v76[v78[2]]=v76[v78[3]]/v76[v78[4]] ;else v76[v78[2]]=v29(v67[v78[3]],nil,v62);end elseif (v79>20) then local v148=v67[v78[3]];local v149;local v150={};v149=v10({},{__index=function(v326,v327) local v328=v150[v327];return v328[1][v328[2]];end,__newindex=function(v329,v330,v331) local v332=v150[v330];v332[1][v332[2]]=v331;end});for v334=1,v78[4] do v70=v70 + 1 ;local v335=v66[v70];if (v335[1]==103) then v150[v334-1 ]={v76,v335[3]};else v150[v334-1 ]={v61,v335[3]};end v75[ #v75 + 1 ]=v150;end v76[v78[2]]=v29(v148,v149,v62);else v76[v78[2]]=v76[v78[3]] * v78[4] ;end elseif (v79<=25) then if (v79<=23) then if (v79>22) then do return v76[v78[2]];end else local v153=0;local v154;while true do if (v153==0) then v154=v78[2];v76[v154]=v76[v154](v13(v76,v154 + 1 ,v71));break;end end end elseif (v79>24) then do return v76[v78[2]];end elseif (v76[v78[2]]<v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=27) then if (v79>26) then for v337=v78[2],v78[3] do v76[v337]=nil;end else v70=v78[3];end elseif (v79==28) then local v156=v78[2];v76[v156](v76[v156 + 1 ]);else local v157=v78[2];local v158=v76[v157];local v159=v76[v157 + 2 ];if (v159>0) then if (v158>v76[v157 + 1 ]) then v70=v78[3];else v76[v157 + 3 ]=v158;end elseif (v158<v76[v157 + 1 ]) then v70=v78[3];else v76[v157 + 3 ]=v158;end end elseif (v79<=44) then if (v79<=36) then if (v79<=32) then if (v79<=30) then local v113=v78[2];v76[v113](v13(v76,v113 + 1 ,v78[3]));elseif (v79>31) then v76[v78[2]]={};else v76[v78[2]]=v76[v78[3]] * v76[v78[4]] ;end elseif (v79<=34) then if (v79>33) then v76[v78[2]]=v76[v78[3]] -v76[v78[4]] ;else v76[v78[2]]=v76[v78[3]] + v76[v78[4]] ;end elseif (v79>35) then local v164=0;local v165;local v166;while true do if (v164==1) then for v441=v165 + 1 ,v78[4] do v166=v166   .. v76[v441] ;end v76[v78[2]]=v166;break;end if (v164==0) then v165=v78[3];v166=v76[v165];v164=1;end end else local v167=0;local v168;while true do if (v167==0) then v168=v78[2];v76[v168]=v76[v168](v76[v168 + 1 ]);break;end end end elseif (v79<=40) then if (v79<=38) then if (v79>37) then local v169=v78[2];local v170=v76[v169];for v339=v169 + 1 ,v78[3] do v7(v170,v76[v339]);end else v76[v78[2]]=v76[v78[3]] * v76[v78[4]] ;end elseif (v79==39) then v76[v78[2]]=v62[v78[3]];else local v174=0;local v175;local v176;local v177;local v178;while true do if (v174==2) then for v442=v175,v71 do local v443=0;while true do if (v443==0) then v178=v178 + 1 ;v76[v442]=v176[v178];break;end end end break;end if (v174==1) then v71=(v177 + v175) -1 ;v178=0;v174=2;end if (v174==0) then v175=v78[2];v176,v177=v69(v76[v175](v13(v76,v175 + 1 ,v78[3])));v174=1;end end end elseif (v79<=42) then if (v79==41) then if  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v179=0;local v180;local v181;local v182;while true do if (v179==0) then v180=v78[2];v181={v76[v180](v13(v76,v180 + 1 ,v71))};v179=1;end if (v179==1) then v182=0;for v444=v180,v78[4] do v182=v182 + 1 ;v76[v444]=v181[v182];end break;end end end elseif (v79==43) then v76[v78[2]]=v78[3]~=0 ;else v76[v78[2]]=v76[v78[3]]/v76[v78[4]] ;end elseif (v79<=51) then if (v79<=47) then if (v79<=45) then v76[v78[2]]= #v76[v78[3]];elseif (v79==46) then local v185=v78[2];do return v13(v76,v185,v185 + v78[3] );end else local v186=v78[2];v76[v186]=v76[v186](v13(v76,v186 + 1 ,v78[3]));end elseif (v79<=49) then if (v79>48) then v76[v78[2]]=v76[v78[3]];else v76[v78[2]]=v78[3];end elseif (v79==50) then local v192=0;local v193;while true do if (v192==0) then v193=v76[v78[4]];if  not v193 then v70=v70 + 1 ;else v76[v78[2]]=v193;v70=v78[3];end break;end end else local v194=v78[2];local v195={};for v340=1, #v75 do local v341=0;local v342;while true do if (v341==0) then v342=v75[v340];for v490=0, #v342 do local v491=v342[v490];local v492=v491[1];local v493=v491[2];if ((v492==v76) and (v493>=v194)) then v195[v493]=v492[v493];v491[1]=v195;end end break;end end end end elseif (v79<=55) then if (v79<=53) then if (v79>52) then local v196=v78[2];local v197,v198=v69(v76[v196](v13(v76,v196 + 1 ,v78[3])));v71=(v198 + v196) -1 ;local v199=0;for v343=v196,v71 do v199=v199 + 1 ;v76[v343]=v197[v199];end else v61[v78[3]]=v76[v78[2]];end elseif (v79>54) then v76[v78[2]]=v76[v78[3]] + v78[4] ;else local v203=0;local v204;local v205;local v206;while true do if (v203==1) then v206={};v205=v10({},{__index=function(v448,v449) local v450=v206[v449];return v450[1][v450[2]];end,__newindex=function(v451,v452,v453) local v454=v206[v452];v454[1][v454[2]]=v453;end});v203=2;end if (v203==2) then for v456=1,v78[4] do v70=v70 + 1 ;local v457=v66[v70];if (v457[1]==103) then v206[v456-1 ]={v76,v457[3]};else v206[v456-1 ]={v61,v457[3]};end v75[ #v75 + 1 ]=v206;end v76[v78[2]]=v29(v204,v205,v62);break;end if (0==v203) then v204=v67[v78[3]];v205=nil;v203=1;end end end elseif (v79<=57) then if (v79>56) then if  not v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v207=0;local v208;local v209;local v210;while true do if (v207==1) then v210=v76[v208 + 2 ];if (v210>0) then if (v209>v76[v208 + 1 ]) then v70=v78[3];else v76[v208 + 3 ]=v209;end elseif (v209<v76[v208 + 1 ]) then v70=v78[3];else v76[v208 + 3 ]=v209;end break;end if (v207==0) then v208=v78[2];v209=v76[v208];v207=1;end end end elseif (v79>58) then v76[v78[2]]=v76[v78[3]]/v78[4] ;else local v212=0;local v213;local v214;local v215;while true do if (v212==0) then v213=v78[2];v214={v76[v213](v76[v213 + 1 ])};v212=1;end if (v212==1) then v215=0;for v459=v213,v78[4] do local v460=0;while true do if (v460==0) then v215=v215 + 1 ;v76[v459]=v214[v215];break;end end end break;end end end elseif (v79<=89) then if (v79<=74) then if (v79<=66) then if (v79<=62) then if (v79<=60) then v76[v78[2]]=v62[v78[3]];elseif (v79==61) then v76[v78[2]]();else v61[v78[3]]=v76[v78[2]];end elseif (v79<=64) then if (v79>63) then local v218=0;local v219;while true do if (v218==0) then v219=v78[2];v76[v219]=v76[v219](v76[v219 + 1 ]);break;end end else local v220=0;local v221;local v222;local v223;while true do if (1==v220) then v223=v78[3];for v461=1,v223 do v222[v461]=v76[v221 + v461 ];end break;end if (v220==0) then v221=v78[2];v222=v76[v221];v220=1;end end end elseif (v79==65) then local v224=v78[2];local v225=v76[v78[3]];v76[v224 + 1 ]=v225;v76[v224]=v225[v78[4]];elseif (v76[v78[2]]~=v78[4]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=70) then if (v79<=68) then if (v79>67) then if v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end else local v229=0;local v230;local v231;while true do if (v229==0) then v230=v78[2];v231=v76[v78[3]];v229=1;end if (v229==1) then v76[v230 + 1 ]=v231;v76[v230]=v231[v78[4]];break;end end end elseif (v79==69) then if (v76[v78[2]]<v78[4]) then v70=v70 + 1 ;else v70=v78[3];end else local v232=v78[3];local v233=v76[v232];for v346=v232 + 1 ,v78[4] do v233=v233   .. v76[v346] ;end v76[v78[2]]=v233;end elseif (v79<=72) then if (v79==71) then local v235=0;local v236;local v237;local v238;while true do if (v235==0) then v236=v78[2];v237=v76[v236];v235=1;end if (v235==1) then v238=v78[3];for v464=1,v238 do v237[v464]=v76[v236 + v464 ];end break;end end else local v239=0;local v240;while true do if (v239==0) then v240=v78[2];v76[v240](v13(v76,v240 + 1 ,v71));break;end end end elseif (v79==73) then v76[v78[2]]= -v76[v78[3]];elseif v76[v78[2]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=81) then if (v79<=77) then if (v79<=75) then v76[v78[2]]=v76[v78[3]] * v78[4] ;elseif (v79==76) then v70=v78[3];else local v243=v78[2];local v244,v245=v69(v76[v243](v76[v243 + 1 ]));v71=(v245 + v243) -1 ;local v246=0;for v347=v243,v71 do v246=v246 + 1 ;v76[v347]=v244[v246];end end elseif (v79<=79) then if (v79>78) then local v247=0;local v248;local v249;local v250;while true do if (v247==0) then v248=v78[2];v249=v76[v248 + 2 ];v247=1;end if (v247==2) then if (v249>0) then if (v250<=v76[v248 + 1 ]) then v70=v78[3];v76[v248 + 3 ]=v250;end elseif (v250>=v76[v248 + 1 ]) then v70=v78[3];v76[v248 + 3 ]=v250;end break;end if (v247==1) then v250=v76[v248] + v249 ;v76[v248]=v250;v247=2;end end else local v251=0;local v252;local v253;while true do if (v251==0) then v252=v78[2];v253=v76[v252];v251=1;end if (v251==1) then for v467=v252 + 1 ,v78[3] do v7(v253,v76[v467]);end break;end end end elseif (v79>80) then do return;end else v76[v78[2]]=v76[v78[3]] -v78[4] ;end elseif (v79<=85) then if (v79<=83) then if (v79==82) then local v255=0;local v256;while true do if (v255==0) then v256=v78[2];v76[v256]=v76[v256](v13(v76,v256 + 1 ,v71));break;end end else for v350=v78[2],v78[3] do v76[v350]=nil;end end elseif (v79>84) then if (v76[v78[2]]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else do return;end end elseif (v79<=87) then if (v79==86) then local v257=0;local v258;local v259;local v260;while true do if (v257==0) then v258=v78[2];v259={v76[v258](v13(v76,v258 + 1 ,v71))};v257=1;end if (v257==1) then v260=0;for v468=v258,v78[4] do local v469=0;while true do if (0==v469) then v260=v260 + 1 ;v76[v468]=v259[v260];break;end end end break;end end else local v261=v78[2];local v262,v263=v69(v76[v261]());v71=(v263 + v261) -1 ;local v264=0;for v352=v261,v71 do v264=v264 + 1 ;v76[v352]=v262[v264];end end elseif (v79==88) then local v265=0;local v266;local v267;local v268;while true do if (v265==0) then v266=v78[2];v267={v76[v266](v76[v266 + 1 ])};v265=1;end if (v265==1) then v268=0;for v470=v266,v78[4] do local v471=0;while true do if (v471==0) then v268=v268 + 1 ;v76[v470]=v267[v268];break;end end end break;end end else local v269=v76[v78[4]];if v269 then v70=v70 + 1 ;else local v376=0;while true do if (0==v376) then v76[v78[2]]=v269;v70=v78[3];break;end end end end elseif (v79<=104) then if (v79<=96) then if (v79<=92) then if (v79<=90) then v76[v78[2]]= #v76[v78[3]];elseif (v79>91) then local v270=0;local v271;local v272;while true do if (v270==1) then for v472=1, #v75 do local v473=0;local v474;while true do if (v473==0) then v474=v75[v472];for v523=0, #v474 do local v524=0;local v525;local v526;local v527;while true do if (v524==1) then v527=v525[2];if ((v526==v76) and (v527>=v271)) then v272[v527]=v526[v527];v525[1]=v272;end break;end if (0==v524) then v525=v474[v523];v526=v525[1];v524=1;end end end break;end end end break;end if (v270==0) then v271=v78[2];v272={};v270=1;end end else local v273=v78[2];v76[v273](v13(v76,v273 + 1 ,v78[3]));end elseif (v79<=94) then if (v79>93) then local v274=v78[2];local v275,v276=v69(v76[v274]());v71=(v276 + v274) -1 ;local v277=0;for v355=v274,v71 do v277=v277 + 1 ;v76[v355]=v275[v277];end else local v278=v78[2];v76[v278](v76[v278 + 1 ]);end elseif (v79>95) then v76[v78[2]]=v61[v78[3]];else v76[v78[2]]=v76[v78[3]]/v78[4] ;end elseif (v79<=100) then if (v79<=98) then if (v79==97) then v76[v78[2]]=v78[3];else v76[v78[2]]= -v76[v78[3]];end elseif (v79==99) then v76[v78[2]]=v76[v78[3]][v78[4]];elseif (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=102) then if (v79>101) then local v287=v78[2];v76[v287]=v76[v287]();else local v289=v78[2];local v290=v76[v289 + 2 ];local v291=v76[v289] + v290 ;v76[v289]=v291;if (v290>0) then if (v291<=v76[v289 + 1 ]) then v70=v78[3];v76[v289 + 3 ]=v291;end elseif (v291>=v76[v289 + 1 ]) then v70=v78[3];v76[v289 + 3 ]=v291;end end elseif (v79>103) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v76[v78[3]];end elseif (v79<=112) then if (v79<=108) then if (v79<=106) then if (v79>105) then local v295=v78[2];local v296=v78[4];local v297=v295 + 2 ;local v298={v76[v295](v76[v295 + 1 ],v76[v297])};for v358=1,v296 do v76[v297 + v358 ]=v298[v358];end local v299=v298[1];if v299 then v76[v297]=v299;v70=v78[3];else v70=v70 + 1 ;end else v76[v78[2]]=v78[3]~=0 ;end elseif (v79==107) then v76[v78[2]][v78[3]]=v78[4];else v76[v78[2]]=v76[v78[3]][v78[4]];end elseif (v79<=110) then if (v79>109) then if (v78[2]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]=v76[v78[3]] + v76[v78[4]] ;end elseif (v79>111) then v76[v78[2]][v78[3]]=v78[4];else v76[v78[2]]();end elseif (v79<=116) then if (v79<=114) then if (v79==113) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]][v78[3]]=v76[v78[4]];end elseif (v79>115) then local v310=0;local v311;local v312;local v313;local v314;while true do if (v310==0) then v311=v78[2];v312,v313=v69(v76[v311](v76[v311 + 1 ]));v310=1;end if (v310==2) then for v479=v311,v71 do local v480=0;while true do if (v480==0) then v314=v314 + 1 ;v76[v479]=v312[v314];break;end end end break;end if (v310==1) then v71=(v313 + v311) -1 ;v314=0;v310=2;end end else v62[v78[3]]=v76[v78[2]];end elseif (v79<=118) then if (v79==117) then if (v76[v78[2]]<v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end else local v317=v78[2];local v318=v78[4];local v319=v317 + 2 ;local v320={v76[v317](v76[v317 + 1 ],v76[v319])};for v361=1,v318 do v76[v319 + v361 ]=v320[v361];end local v321=v320[1];if v321 then local v384=0;while true do if (v384==0) then v76[v319]=v321;v70=v78[3];break;end end else v70=v70 + 1 ;end end elseif (v79==119) then local v322=0;local v323;while true do if (v322==0) then v323=v76[v78[4]];if v323 then v70=v70 + 1 ;else local v498=0;while true do if (v498==0) then v76[v78[2]]=v323;v70=v78[3];break;end end end break;end end else v62[v78[3]]=v76[v78[2]];end v70=v70 + 1 ;break;end if (0==v87) then v78=v66[v70];v79=v78[1];v87=1;end end end end;end return v29(v28(),{},v17)(...);end return v

